<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogging on errors.New(&#34;antonmry: blog&#34;)</title>
    <link>https://antonmry.github.io/tags/blogging/</link>
    <description>Recent content in Blogging on errors.New(&#34;antonmry: blog&#34;)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>antonmry@galiglobal.com (Antón R. Yuste)</managingEditor>
    <webMaster>antonmry@galiglobal.com (Antón R. Yuste)</webMaster>
    <lastBuildDate>Thu, 16 Jun 2016 20:49:50 +0200</lastBuildDate>
    <atom:link href="https://antonmry.github.io/tags/blogging/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Time to start a Golang blog with Hugo</title>
      <link>https://antonmry.github.io/post/first-blog-post-with-hugo/</link>
      <pubDate>Thu, 16 Jun 2016 20:49:50 +0200</pubDate>
      <author>antonmry@galiglobal.com (Antón R. Yuste)</author>
      <guid>https://antonmry.github.io/post/first-blog-post-with-hugo/</guid>
      <description>&lt;p&gt;Well, this is embarrassing. I&amp;rsquo;m launching another blog!. Why?. Some time ago I&amp;rsquo;ve started to write a blog, in the beginning for corporate news but it has become a place where to write or document interesting things I do in my work, most of them related to Java, Groovy and Oracle technologies. The blog is generated with &lt;a href=&#34;http://jbake.org/&#34;&gt;JBake&lt;/a&gt; with the &lt;a href=&#34;https://github.com/antonmry/jbake-gradle-plugin&#34;&gt;gradle plugin&lt;/a&gt;, I like to use related technologies and I&amp;rsquo;m quite happy with the result, but to be honest, I don&amp;rsquo;t write frequently.&lt;/p&gt;

&lt;p&gt;Six months ago I&amp;rsquo;ve started to learn and use &lt;a href=&#34;https://golang.org/&#34;&gt;Golang&lt;/a&gt;. I was very impressed with the simplicity of the language and I&amp;rsquo;ve started to read a lot of articles, books, etc., watch videos and develop some projects. I discovered &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, a site generator similar to JBake but written in Go. I was tempted to migrate my previous blog, but today I&amp;rsquo;m going to continue writing about not Golang subjects, so it&amp;rsquo;s simpler to open a new one only for Golang, DevOps, concurrency and perfomance. In another post I will write more about Go and why I find it so interesting.&lt;/p&gt;

&lt;p&gt;As the first post, let&amp;rsquo;s see how to configure &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. I&amp;rsquo;ve to say it was really easy, I really impressed with piece of software. I can compare with other site generators as Jekyll, Hexo or JBake, and I have to say Hugo is my favourite.&lt;/p&gt;

&lt;p&gt;First of all, I&amp;rsquo;ve created a new repo in my Gihub account and cloned it in my laptop:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:antonmry/antonmry.github.io.git
cd antonmry.github.io 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Because I&amp;rsquo;m going to use my github user page, the source code of the page must be in master branch. For your Hugo code, you can have a separate repo or just a different branch. I choose the second option with a branch named source, I prefer it in that way, it&amp;rsquo;s simpler and this is the main difference with the procedure you can find in &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog&#34;&gt;the excellent Hugo documentation&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git checkout -b source
git push -u origin source
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Inside the source code folder, we are going to create a folder linking to the master branch:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git subtree add --prefix=public git@github.com:antonmry/antonmry.github.io.git master --squash
git subtree pull --prefix=public git@github.com:antonmry/antonmry.github.io.git master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s time to generate the site. First you have to install Hugo, plenty of options in the &lt;a href=&#34;https://gohugo.io/overview/installing/&#34;&gt;the Hugo website&lt;/a&gt;. I&amp;rsquo;ve chosen the Fedora package, updates will be easier.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hugo new site antonmry.github.io
mv antonmry.github.io/* .
rm -r antonmry.github.io
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Choose your theme, there are very nice options, I&amp;rsquo;ve chosen beatifulhugo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd themes
git clone https://github.com/halogenica/Hugo-BeautifulHugo.git beautifulhugo
cd ..
echo &amp;quot;theme = \&amp;quot;beautifulhugo\&amp;quot;&amp;quot; &amp;gt;&amp;gt; config.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create your first blog and start the server:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hugo new post/hugo-site-created.md
hugo server --buildDrafts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open in your browser &lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt; and enjoy your first post with Hugo ;-)&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s move the post from draft to publised: edit the file content/post/hugo-site-created.md and change the draft line from true to false if exists.&lt;/p&gt;

&lt;p&gt;Now it&amp;rsquo;s time to upload it to Gihub and make it public:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hugo
git add -A
git commit -m &amp;quot;Initial version&amp;quot;
git push
git subtree push --prefix=public git@github.com:antonmry/antonmry.github.io.git master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oh, really, can it be so easy?. Just go to &lt;a href=&#34;https://antonmry.github.io&#34;&gt;https://antonmry.github.io&lt;/a&gt; (or your equivalent site)&lt;/p&gt;

&lt;p&gt;I was thinking in create a travis job to do the publishing in master (I did it before for jbake) but to be honest, this method is simple enough. I&amp;rsquo;ve added to my .bash_alias the last command and that&amp;rsquo;s all I need.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;p&gt;PS: if you do a rebase in &lt;code&gt;source&lt;/code&gt;, you will need to do it a bit more tricky to push to master because you can&amp;rsquo;t use &lt;code&gt;--force&lt;/code&gt; with the &lt;code&gt;subtree&lt;/code&gt; option:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git push origin `git subtree split --prefix public source`:master --force
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;More info can be found in Stackoverflow &lt;a href=&#34;http://stackoverflow.com/questions/13756055/git-subtree-subtree-up-to-date-but-cant-push&#34;&gt;Git subtree - subtree up-to-date but can&amp;rsquo;t push&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>